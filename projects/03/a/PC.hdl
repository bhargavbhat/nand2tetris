// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:

    // Increment previous value
    Inc16(in=outReg, out=outInc);

    // Handle inc, load and reset (mux'es act as the if statement)
    // Mux #1 -> select between new value to load or incremented value
    // Mux #2 -> select between O/P of Mux #1 or reset value (all zeros)
    Mux16(a=outInc, b=in, sel=load, out=outIncLd);
    Mux16(a=outIncLd, b=false, sel=reset, out=newVal);

    // determines if content of register must change
    // cf1 -> first change flag : set for load or increment case
    Or(a=load, b=inc, out=cf1);
    Or(a=cf1, b=reset, out=changeReg);

    // load register with new value, if needed
    Register(in=newVal, load=changeReg, out=outReg, out=out);
}
